"""Change News

Revision ID: 1f3aa75d9326
Revises: a3030ea569c6
Create Date: 2025-10-04 18:19:41.211940

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1f3aa75d9326'
down_revision: Union[str, None] = 'a3030ea569c6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix__Duplicates__news_id'), table_name='Duplicates')
    op.drop_table('Duplicates')
    op.drop_table('Drafts')
    op.create_unique_constraint(op.f('uq__Entities__id'), 'Entities', ['id'])
    op.add_column('News', sa.Column('text', sa.String(), nullable=True))
    op.create_unique_constraint(op.f('uq__Sources__id'), 'Sources', ['id'])
    op.create_unique_constraint(op.f('uq__Timelines__id'), 'Timelines', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq__Timelines__id'), 'Timelines', type_='unique')
    op.drop_constraint(op.f('uq__Sources__id'), 'Sources', type_='unique')
    op.drop_column('News', 'text')
    op.drop_constraint(op.f('uq__Entities__id'), 'Entities', type_='unique')
    op.create_table('Drafts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('headline', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__Drafts'))
    )
    op.create_table('Duplicates',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('channel', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('news_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['News.id'], name=op.f('fk__Duplicates__news_id__News')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__Duplicates'))
    )
    op.create_index(op.f('ix__Duplicates__news_id'), 'Duplicates', ['news_id'], unique=False)
    # ### end Alembic commands ###
